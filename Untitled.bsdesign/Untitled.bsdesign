{"version":52,"timestamp":1602670902059,"design":{"id":"8662794c20b5c2032cf2be50aa36df54_1602670460049","name":"Untitled","settings":{"theme":{"id":"default","type":"builtin"},"jqueryVersion":"3.5","headContent":"","meta":[],"sitemap":{"enabled":false},"pwa":{"enabled":false},"favicons":[]},"placeholders":{},"framework":"4","assets":{"images":{"name":"","expanded":false,"children":[]},"fonts":{"name":"","expanded":false,"children":[]},"css":{"name":"","expanded":false,"children":[{"name":"File-Input---Beautiful-Input--Button-Approach-Jasny-Bootstrap.css","properties":{},"priority":0,"pageBlacklist":[],"pageWhitelist":[],"blocks":[{"selector":".btn-file","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"position","value":"relative","enabled":true,"system":false},{"property":"overflow","value":"hidden","enabled":true,"system":false},{"property":"vertical-align","value":"middle","enabled":true,"system":false}]},{"selector":".btn-file > input","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"position","value":"absolute","enabled":true,"system":false},{"property":"top","value":"0","enabled":true,"system":false},{"property":"right","value":"0","enabled":true,"system":false},{"property":"width","value":"100%","enabled":true,"system":false},{"property":"height","value":"100%","enabled":true,"system":false},{"property":"margin","value":"0","enabled":true,"system":false},{"property":"font-size","value":"23px","enabled":true,"system":false},{"property":"cursor","value":"pointer","enabled":true,"system":false},{"property":"filter","value":"alpha(opacity=0)","enabled":true,"system":false},{"property":"opacity","value":"0","enabled":true,"system":false},{"property":"direction","value":"ltr","enabled":true,"system":false}]},{"selector":".fileinput","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"display","value":"inline-block","enabled":true,"system":false},{"property":"margin-bottom","value":"9px","enabled":true,"system":false}]},{"selector":".fileinput .form-control","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"display","value":"inline-block","enabled":true,"system":false},{"property":"padding-top","value":"7px","enabled":true,"system":false},{"property":"padding-bottom","value":"5px","enabled":true,"system":false},{"property":"margin-bottom","value":"0","enabled":true,"system":false},{"property":"vertical-align","value":"middle","enabled":true,"system":false},{"property":"cursor","value":"text","enabled":true,"system":false}]},{"selector":".fileinput .thumbnail","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"display","value":"inline-block","enabled":true,"system":false},{"property":"margin-bottom","value":"5px","enabled":true,"system":false},{"property":"overflow","value":"hidden","enabled":true,"system":false},{"property":"text-align","value":"center","enabled":true,"system":false},{"property":"vertical-align","value":"middle","enabled":true,"system":false}]},{"selector":".fileinput .thumbnail > img","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"max-height","value":"100%","enabled":true,"system":false}]},{"selector":".fileinput .btn","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"vertical-align","value":"middle","enabled":true,"system":false}]},{"selector":".fileinput-exists .fileinput-new, .fileinput-new .fileinput-exists","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"display","value":"none","enabled":true,"system":false}]},{"selector":".fileinput-inline .fileinput-controls","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"display","value":"inline","enabled":true,"system":false}]},{"selector":".fileinput-filename","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"display","value":"inline-block","enabled":true,"system":false},{"property":"overflow","value":"hidden","enabled":true,"system":false},{"property":"vertical-align","value":"middle","enabled":true,"system":false}]},{"selector":".form-control .fileinput-filename","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"vertical-align","value":"bottom","enabled":true,"system":false}]},{"selector":".fileinput.input-group","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"display","value":"table","enabled":true,"system":false}]},{"selector":".fileinput.input-group > *","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"position","value":"relative","enabled":true,"system":false},{"property":"z-index","value":"2","enabled":true,"system":false}]},{"selector":".fileinput.input-group > .btn-file","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"z-index","value":"1","enabled":true,"system":false}]},{"selector":".fileinput-new.input-group .btn-file, .fileinput-new .input-group .btn-file","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"border-radius","value":"0 4px 4px 0","enabled":true,"system":false}]},{"selector":".fileinput-new.input-group .btn-file.btn-xs, .fileinput-new .input-group .btn-file.btn-xs, .fileinput-new.input-group .btn-file.btn-sm, .fileinput-new .input-group .btn-file.btn-sm","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"border-radius","value":"0 3px 3px 0","enabled":true,"system":false}]},{"selector":".fileinput-new.input-group .btn-file.btn-lg, .fileinput-new .input-group .btn-file.btn-lg","mediaQuery":false,"system":false,"enabled":true,"rules":[{"property":"border-radius","value":"0 6px 6px 0","enabled":true,"system":false}]}]},{"name":"styles.css","properties":{},"priority":0,"pageBlacklist":[],"pageWhitelist":[],"blocks":[]}]},"js":{"name":"","expanded":false,"children":[{"name":"File-Input---Beautiful-Input--Button-Approach-Jasny-Bootstrap.js","properties":{},"priority":0,"pageBlacklist":[],"pageWhitelist":[],"value":"/* ===========================================================\n * Bootstrap: fileinput.js v3.1.3\n * http://jasny.github.com/bootstrap/javascript/#fileinput\n * ===========================================================\n * Copyright 2012-2014 Arnold Daniels\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\")\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================== */\n\n+function ($) { \"use strict\";\n\n  var isIE = window.navigator.appName == 'Microsoft Internet Explorer'\n\n  // FILEUPLOAD PUBLIC CLASS DEFINITION\n  // =================================\n\n  var Fileinput = function (element, options) {\n    this.$element = $(element)\n    \n    this.$input = this.$element.find(':file')\n    if (this.$input.length === 0) return\n\n    this.name = this.$input.attr('name') || options.name\n\n    this.$hidden = this.$element.find('input[type=hidden][name=\"' + this.name + '\"]')\n    if (this.$hidden.length === 0) {\n      this.$hidden = $('<input type=\"hidden\">').insertBefore(this.$input)\n    }\n\n    this.$preview = this.$element.find('.fileinput-preview')\n    var height = this.$preview.css('height')\n    if (this.$preview.css('display') !== 'inline' && height !== '0px' && height !== 'none') {\n      this.$preview.css('line-height', height)\n    }\n        \n    this.original = {\n      exists: this.$element.hasClass('fileinput-exists'),\n      preview: this.$preview.html(),\n      hiddenVal: this.$hidden.val()\n    }\n    \n    this.listen()\n  }\n  \n  Fileinput.prototype.listen = function() {\n    this.$input.on('change.bs.fileinput', $.proxy(this.change, this))\n    $(this.$input[0].form).on('reset.bs.fileinput', $.proxy(this.reset, this))\n    \n    this.$element.find('[data-trigger=\"fileinput\"]').on('click.bs.fileinput', $.proxy(this.trigger, this))\n    this.$element.find('[data-dismiss=\"fileinput\"]').on('click.bs.fileinput', $.proxy(this.clear, this))\n  },\n\n  Fileinput.prototype.change = function(e) {\n    var files = e.target.files === undefined ? (e.target && e.target.value ? [{ name: e.target.value.replace(/^.+\\\\/, '')}] : []) : e.target.files\n    \n    e.stopPropagation()\n\n    if (files.length === 0) {\n      this.clear()\n      return\n    }\n\n    this.$hidden.val('')\n    this.$hidden.attr('name', '')\n    this.$input.attr('name', this.name)\n\n    var file = files[0]\n\n    if (this.$preview.length > 0 && (typeof file.type !== \"undefined\" ? file.type.match(/^image\\/(gif|png|jpeg)$/) : file.name.match(/\\.(gif|png|jpe?g)$/i)) && typeof FileReader !== \"undefined\") {\n      var reader = new FileReader()\n      var preview = this.$preview\n      var element = this.$element\n\n      reader.onload = function(re) {\n        var $img = $('<img>')\n        $img[0].src = re.target.result\n        files[0].result = re.target.result\n        \n        element.find('.fileinput-filename').text(file.name)\n        \n        // if parent has max-height, using `(max-)height: 100%` on child doesn't take padding and border into account\n        if (preview.css('max-height') != 'none') $img.css('max-height', parseInt(preview.css('max-height'), 10) - parseInt(preview.css('padding-top'), 10) - parseInt(preview.css('padding-bottom'), 10)  - parseInt(preview.css('border-top'), 10) - parseInt(preview.css('border-bottom'), 10))\n        \n        preview.html($img)\n        element.addClass('fileinput-exists').removeClass('fileinput-new')\n\n        element.trigger('change.bs.fileinput', files)\n      }\n\n      reader.readAsDataURL(file)\n    } else {\n      this.$element.find('.fileinput-filename').text(file.name)\n      this.$preview.text(file.name)\n      \n      this.$element.addClass('fileinput-exists').removeClass('fileinput-new')\n      \n      this.$element.trigger('change.bs.fileinput')\n    }\n  },\n\n  Fileinput.prototype.clear = function(e) {\n    if (e) e.preventDefault()\n    \n    this.$hidden.val('')\n    this.$hidden.attr('name', this.name)\n    this.$input.attr('name', '')\n\n    //ie8+ doesn't support changing the value of input with type=file so clone instead\n    if (isIE) { \n      var inputClone = this.$input.clone(true);\n      this.$input.after(inputClone);\n      this.$input.remove();\n      this.$input = inputClone;\n    } else {\n      this.$input.val('')\n    }\n\n    this.$preview.html('')\n    this.$element.find('.fileinput-filename').text('')\n    this.$element.addClass('fileinput-new').removeClass('fileinput-exists')\n    \n    if (e !== undefined) {\n      this.$input.trigger('change')\n      this.$element.trigger('clear.bs.fileinput')\n    }\n  },\n\n  Fileinput.prototype.reset = function() {\n    this.clear()\n\n    this.$hidden.val(this.original.hiddenVal)\n    this.$preview.html(this.original.preview)\n    this.$element.find('.fileinput-filename').text('')\n\n    if (this.original.exists) this.$element.addClass('fileinput-exists').removeClass('fileinput-new')\n     else this.$element.addClass('fileinput-new').removeClass('fileinput-exists')\n    \n    this.$element.trigger('reset.bs.fileinput')\n  },\n\n  Fileinput.prototype.trigger = function(e) {\n    this.$input.trigger('click')\n    e.preventDefault()\n  }\n\n  \n  // FILEUPLOAD PLUGIN DEFINITION\n  // ===========================\n\n  var old = $.fn.fileinput\n  \n  $.fn.fileinput = function (options) {\n    return this.each(function () {\n      var $this = $(this),\n          data = $this.data('bs.fileinput')\n      if (!data) $this.data('bs.fileinput', (data = new Fileinput(this, options)))\n      if (typeof options == 'string') data[options]()\n    })\n  }\n\n  $.fn.fileinput.Constructor = Fileinput\n\n\n  // FILEINPUT NO CONFLICT\n  // ====================\n\n  $.fn.fileinput.noConflict = function () {\n    $.fn.fileinput = old\n    return this\n  }\n\n\n  // FILEUPLOAD DATA-API\n  // ==================\n\n  $(document).on('click.fileinput.data-api', '[data-provides=\"fileinput\"]', function (e) {\n    var $this = $(this)\n    if ($this.data('bs.fileinput')) return\n    $this.fileinput($this.data())\n      \n    var $target = $(e.target).closest('[data-dismiss=\"fileinput\"],[data-trigger=\"fileinput\"]');\n    if ($target.length > 0) {\n      e.preventDefault()\n      $target.trigger('click.bs.fileinput')\n    }\n  })\n\n}(window.jQuery);\n"}]}},"pages":{"name":"","expanded":false,"children":[{"name":"index.html","properties":{},"priority":0,"pageBlacklist":[],"pageWhitelist":[],"html":{"class":"HTML","cssClasses":{"system":{},"parent":""},"overrides":{},"flags":{"canBeMoved":false,"canBeDeleted":false,"canBeDuplicated":false,"canBeEdited":false,"canBePackaged":false,"canBeCopied":false},"properties":{},"masked":false,"label":"","children":[{"class":"Body","cssClasses":{"system":{},"parent":""},"overrides":{},"flags":{"canBeMoved":false,"canBeDeleted":false,"canBeDuplicated":false,"canBeEdited":false,"canBePackaged":false,"canBeCopied":false},"properties":{},"masked":false,"label":"","children":[{"class":"Div","cssClasses":{"system":{"main":""},"parent":""},"overrides":{"/":{"class":"custom-file"}},"flags":{"canBeMoved":true,"canBeDeleted":true,"canBeDuplicated":true,"canBeEdited":false,"canBePackaged":true,"canBeCopied":true},"properties":{},"masked":false,"label":"Bootstrap Custom File Input","children":[{"class":"InputFile","cssClasses":{"system":{"main":""},"parent":""},"overrides":{"/":{"class":"custom-file-input"}},"flags":{"canBeMoved":true,"canBeDeleted":true,"canBeDuplicated":true,"canBeEdited":false,"canBePackaged":true,"canBeCopied":true},"properties":{},"masked":false,"label":""},{"class":"FieldLabel","cssClasses":{"system":{"main":""},"parent":""},"overrides":{"/":{"class":"custom-file-label"}},"flags":{"canBeMoved":true,"canBeDeleted":true,"canBeDuplicated":true,"canBeEdited":true,"canBePackaged":true,"canBeCopied":true},"properties":{},"masked":false,"label":"","children":[{"class":"InlineCharacter","char":"","bold":false,"italic":false,"strike":false,"underline":false,"link":false},"Upload File"]}]},{"class":"Button","cssClasses":{"system":{"main":"btn btn-primary"},"parent":""},"overrides":{"/":{"type":"button","style":"filter: blur(0px) brightness(103%) grayscale(30%) hue-rotate(0deg) invert(0%) sepia(0%);"}},"flags":{"canBeMoved":true,"canBeDeleted":true,"canBeDuplicated":true,"canBeEdited":true,"canBePackaged":true,"canBeCopied":true},"properties":{"type":"Button","style":"btn-primary","size":"","active":false,"block":false,"outlined":false},"masked":false,"label":"","children":[{"class":"InlineCharacter","char":"","bold":false,"italic":false,"strike":false,"underline":false,"link":false},"SUBMIT"]}]}]},"meta":[]}]}}}